@startuml
abstract class Consensus {
  {abstract} +takeConsensus(data)
  {abstract} +receiveData(data) : void
}

class ImageLabelConsensus {
  +takeConsensus(data)
  +receiveData(data) : void
}

class PipelineRequest {
  -requestID : Uint
  -datasetSource : String
  -modelSource : String
  -provider : Address
  -bid : Uint
  -consensusMethod : Consensus
  -result : Container
  -participation : Map<Worker, float>
}

class Worker {
  -WorkerAddress : String
  -currentlyWorking : Bool
  -currentRequest : Request
  -currentDeposit : Uint
  +takeDeposit(amount : Uint)
  +returnDeposit() : void
}

class Pipeline {
  -waitingRequests : PriorityQueue<PipelineRequest>
  -workingRequests : PipelineRequest[]
  -Workers : Worker[]
  +retrieveRequests() : Request[]
  +finishRequest(request : Request)
}



class User {
  -Address : String
}

class Client {
  -Worker : User
 -requestID: Uint
  +getModel(request : Request)
  +getDataSet(request : Request)
  +startMining(user : User)
}

class TokenManager {
  -dividends : Map<Uint, Uint>
  -token : POVToken
  -Workers : Address[]
  -pipelineAPI : Oracle
  -waitingRequests : Map<Uint, Request>
  -workingRequests : Map<Uint, Request>
  -waitingIDs : Uint[]
  -workingIDs : Uint[]
  -nextRequestID : Uint
  -nextTokenID : Uint
  +createRequest(datasetSource : String, modelSource : String, bid : Uint) public payable
  +sendAllRequests() internal
  +distributeDividends(val : Uint) private
  +claimDividends() public nonReetrant
  +<<Modifier>> nonReentrant
  +<<Modifier>>
}

class Request {
  -requestID : Uint
  -datasetSource : String
  -modelSource : String
  -requestOwner : Address
  -bid : Uint
  -numImages : Uint
  -result : Container
  -participation : Map<address, Uint>
}

class ERC721 {
}

class POVToken {
}

class Oracle {
}

TokenManager "1" -- "many" Request : contains
TokenManager -- POVToken : owns
POVToken -- ERC721 : is
TokenManager -- Oracle : uses

Consensus <|-- ImageLabelConsensus
PipelineRequest "1" *-- "1" Consensus : uses
Worker "1" -- "1" PipelineRequest : working on
Pipeline "1" -- "many" PipelineRequest : manages
Pipeline "1" -- "many" Worker : manages
Client -down-> User : has
@enduml
